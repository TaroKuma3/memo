【やったこと】ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
🔸workの単独削除





🔸動作確認済み
・サインアップ
		✔︎名前入力
		✔︎メアド入力
		✔︎PW入力
・ログイン
		✔︎メアド入力
		✔︎PW入力
・ログアウト
		✔︎ログアウト
・アカウント情報
		✔︎アカウント情報の表示
		✔︎アカウント情報の編集
		・削除
				✔︎削除してトップへ
				✔︎MJNからも消えた
				❌PICK UPからは消えない（クリックするとエラー出る）
				・ブクマからの削除チェック
・MOKUる
		✔︎MOKUタグ選択
		✔︎MJN公開選択
		✔︎MOKU開始！クリック
				✔︎一時停止！クリック
				✔︎MOKU終了！
		✔︎マイぺに戻るクリック
・これまでのMOKU一覧
		✔︎一覧表示
		✔︎絞り込み
		✔︎詳細（mokus/show.html.erb)を表示
		✔︎成果物登録へジャンプ
		✔︎マイぺへ戻る
・MOKUタグ一覧
		✔︎とりまには削除編集リンクがない
		✔︎一覧が表示されている
		✔︎各moku_typeに紐づくMOKUの一覧（moku_type/show.html.erb)へジャンプ
				✔︎mokus/show.html.erbへジャンプ
		✔︎moku_typeの編集
		・moku_typeの削除
		✔︎新しいMOKUタグ追加
・成果物一覧
		✔︎一覧表示
		✔︎成果物詳細(works/show.html.erb)の表示
		✔︎新しい成果物の登録でmoku_type一覧へジャンプ（ただしわかりにくいのでちょっと調整したい）
		✔︎マイぺへ戻る
・ブクマ
		✔︎一覧へジャンプ
		✔︎成果物詳細へジャンプ
				✔︎some oneの場合はworks/for_publick.html.erbへ
				✔︎myの場合はworks/show.html.erbへ
・PICk UP
		✔︎自分のworkでない場合はworks/for_public.html.erbへ
		✔︎自分のworkの場合はworks/show.html.erbへ
・MJN
		✔︎表示（表示方法は検討中）
・MOKUアイテム
		✔︎表示（コメントあり）
		✔︎表示（コメントなし）　unlessだと、ブランクもelseに振り分けられてしまう
・ユーザーの公開非公開
		✔︎公開ユーザー（mypage/show.html.erbで分岐させた公開ユーザの詳細）
		✔︎非公開ユーザー（mypage/show.html.erbで分岐させた非公開ユーザーという一文のみ）
・管理者メニュー
		✔︎admin == trueのみ表示
		✔︎リンクジャンプ
・カレンダー
		✔︎表示
		✔︎リンクジャンプ
・個人設定
		✔︎accounts/edit.html.erbへジャンプ
		✔︎ニックネームのpresence:true
		✔︎ニックネームの編集
		✔︎MOKUアイテムの編集　できるがブランクでも通ってしまう
		✔︎自己紹介の編集　できるがブランクでも通ってしまう
・よくある質問
		✔︎一覧表示
		✔︎カテゴリ一覧表示と絞り込み
		✔︎QAの詳細へジャンプ（faqs/show.html.erb）
		✔︎admin == trueの時だけshow.html.erbに編集・削除リンク
				✔︎編集画面へのジャンプ
				✔︎QAの削除（一覧からも消えたし、１つしかタグがない場合タグも消える）
		
		

		
		
				
	




【やってること】ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー

	





【相談すること】ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
🔸mokus/index.html.erb
moku_typeごとに絞り込みできるようにしたやつ、deleted: falseを拾わないようにするのに、メソッドつくればいいよね！って教わった。
そのまま書いちゃっても働いたけど、きめうちっていうか、


🔸退会ユーザーのログイン禁止
Herokuでエラーになっちゃった





【やること】ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
🔸mokus/index.html.erbの絞り込み…
		→メソッド作ってよべばおｋ
		active_moku_typesみたいなメソッドをuserに書いてあげて…？
		user?@user.mokutypesだから？
		user

×
  def active_moku_types
    self.moku_types = MokuType.find(params[:user_id]),where(deleted: false)
  end
  
 self.where(deleted: false)


🔸works/_form.html.erbなど
特に公開非公開関係で、どうなるのか説明が必要。その部分JSとjQueryでぺろんちょできそう。


🔸_moku_js.html.erb
#timerと#mokuTimeはどちらも同じ仕事をしている。
どっちかにまとめられるかもしれないので確認。

🔸画像
mini_magickかImageMagickで、画像表示の加工について調べる
おもしろそうなのあればとりいれる


🔸works/index.html.erb
・新しく成果物を登録する時、紐づくmku_の選択のためmoku一覧へ飛ぶが、ちょっとわかりにくいので調整
		１：こちらからのリンクにmokuを選ぶために一覧へ飛ぶよと書く
		２：works/index.html.erbから飛ぶ時の画面を別に容易してタイトル表示を変える
			　「どのMOKUの成果物ですか？」とか。


🔸mokus/new.html.erb
		・alertの設定（CSRFがらみで確か保留だったような）
		
🔸mokus/new.html.erb
		・カウントの表示が２つ出てるので調整



🔸mypage#indexのRANDOM()を違うやり方にする
→Arel.sqlでラップすりゃいいってもんじゃないようだ
→頻度が高いならMJNとおなじようなやり方でいいけれどそうはならないだろう
→JSで乱数を生成するものがあった。あれうまく使えないかな。

→Arel.sqlはSQLを生成する
→おきにが多い順とかいろいろ。

🔸削除系の実装
○ユーザーが消えた時の動作
	
	→deletedカラムを追加したの出るにカラム情報を出すところを非表示へ
			・mokuがらみ
					・
	→各種検索の時にdeleted:trueは除外する　== deleted:falseのみ
	
	
		・削除になったらどうなる？
		・そのidはなくなる。
		・紐が切れるので、デフォルトの「とりあえず」に繋ぎ直しをしたい。

		・物理削除
			DELETEでけしちゃう
		
		【MOKU 削除に関するメモ】
		・紐づくMOKUがあるかどうか✔︎、
		・あるなら消せないからどうする？とユーザーへアラート
		・とりまをつけるか、新しくもくるをつけておうか。

		・論理削除　
			DELETEで消さず、deletedカラムなんかを用意して
			trueなら消されたものとする、というやり方もある。
		・けしますか？＝＞Y＝＞フラグを変えるだけなので宙に浮くということはなくなる。
		・検索として「deletedカラムがtrueでないもの」
		・ユーザーの場合、ログインできないようにする必要もある
		・beforeactionでdeleted == trueならログインできないようにするとか
		
		・退会時に公開設定を非公開にする（moku.work)
		・ブクマ、非公開にされたら見えなくする

		・データーとしてはおかしくないけど、ユーザーからは見えちゃうので、
			見えなくなるような調整は必要。

		・カスケード型リレーション
			ぶら下がっているデーターも消える


🔸ユーザーにプロフ画像持たせる

		
🔸mokus#indexを表にする




